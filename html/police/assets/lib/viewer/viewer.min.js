! function(i) {
    "function" == typeof define && define.amd ? define("viewer", ["jquery"], i) : i("object" == typeof exports ? require("jquery") : jQuery)
}(function(i) {
    "use strict";

    function e(i) {
        return "string" == typeof i
    }

    function t(i) {
        return "number" == typeof i && !isNaN(i)
    }

    function s(i) {
        return void 0 === i
    }

    function n(i, e) {
        var s = [];
        return t(e) && s.push(e), s.slice.apply(i, s)
    }

    function o(i, e) {
        var t = n(arguments, 2);
        return function() {
            return i.apply(e, t.concat(n(arguments)))
        }
    }

    function a(i) {
        var e = [],
            s = i.rotate,
            n = i.scaleX,
            o = i.scaleY;
        return t(s) && e.push("rotate(" + s + "deg)"), t(n) && t(o) && e.push("scale(" + n + "," + o + ")"), e.length ? e.join(" ") : "none"
    }

    function h(i) {
        return i.offsetWidth
    }

    function r(i) {
        return e(i) ? i.replace(/^.*\//, "").replace(/[\?&#].*$/, "") : ""
    }

    function l(i, e) {
        var t;
        if (i.naturalWidth) return e(i.naturalWidth, i.naturalHeight);
        (t = document.createElement("img")).onload = function() {
            e(this.width, this.height)
        }, t.src = i.src
    }

    function d(e) {
        var t = e.length,
            s = 0,
            n = 0;
        return t && (i.each(e, function(i, e) {
            s += e.pageX, n += e.pageY
        }), s /= t, n /= t), {
            pageX: s,
            pageY: n
        }
    }

    function c(i) {
        switch (i) {
            case 2:
                return m;
            case 3:
                return f;
            case 4:
                return g
        }
    }

    function u(e, t) {
        this.$element = i(e), this.options = i.extend({}, u.DEFAULTS, i.isPlainObject(t) && t), this.isImg = !1, this.isBuilt = !1, this.isShown = !1, this.isViewed = !1, this.isFulled = !1, this.isPlayed = !1, this.wheeling = !1, this.playing = !1, this.fading = !1, this.tooltiping = !1, this.transitioning = !1, this.action = !1, this.target = !1, this.timeout = !1, this.index = 0, this.length = 0, this.init()
    }
    var v = i(window),
        w = i(document),
        m = "viewer-hide-xs-down",
        f = "viewer-hide-sm-down",
        g = "viewer-hide-md-down",
        p = "viewer-in",
        b = "viewer-transition",
        y = "mousedown touchstart pointerdown MSPointerDown",
        x = "mouseup touchend touchcancel pointerup pointercancel MSPointerUp MSPointerCancel",
        $ = void 0 !== document.createElement("viewer").style.transition,
        C = Math.round,
        z = Math.sqrt,
        F = Math.abs,
        k = Math.min,
        Y = Math.max,
        I = Number;
    u.prototype = {
        constructor: u,
        init: function() {
            var e = this.options,
                t = this.$element,
                s = t.is("img"),
                n = s ? t : t.find("img"),
                o = n.length,
                a = i.proxy(this.ready, this);
            o && (i.isFunction(e.build) && t.one("build.viewer", e.build), this.trigger("build.viewer").isDefaultPrevented() || ($ || (e.transition = !1), this.isImg = s, this.length = o, this.count = 0, this.$images = n, this.$body = i("body"), e.inline ? (t.one("built.viewer", i.proxy(function() {
                this.view()
            }, this)), this.build(), n.each(function() {
                this.complete ? a() : i(this).one("load.viewer", a)
            })) : t.on("click.viewer", i.proxy(this.start, this))))
        },
        ready: function() {
            ++this.count === this.length && this.build()
        },
        build: function() {
            var e, t, s, n, o, a, h = this.options,
                r = this.$element;
            this.isBuilt || (this.$parent = e = r.parent(), this.$viewer = t = i(u.TEMPLATE), this.$canvas = t.find(".viewer-canvas"), this.$footer = t.find(".viewer-footer"), this.$title = s = t.find(".viewer-title"), this.$toolbar = n = t.find(".viewer-toolbar"), this.$navbar = o = t.find(".viewer-navbar"), this.$button = a = t.find(".viewer-button"), this.$tooltip = t.find(".viewer-tooltip"), this.$player = t.find(".viewer-player"), this.$list = t.find(".viewer-list"), s.addClass(h.title ? c(h.title) : "viewer-hide"), n.addClass(h.toolbar ? c(h.toolbar) : "viewer-hide"), n.find("li[class*=zoom]").toggleClass("viewer-invisible", !h.zoomable), n.find("li[class*=flip]").toggleClass("viewer-invisible", !h.scalable), h.rotatable || n.find("li[class*=rotate]").addClass("viewer-invisible").appendTo(n), o.addClass(h.navbar ? c(h.navbar) : "viewer-hide"), a.toggleClass("viewer-hide", !h.button), h.inline ? (t.css("z-index", h.zIndexInline), "static" === e.css("position") && e.css("position", "relative")) : t.css("z-index", h.zIndex).addClass(["viewer-fixed", "viewer-fade", "viewer-hide"].join(" ")), a.addClass("viewer-close"), r.after(t), h.inline && (this.render(), this.bind(), this.isShown = !0), this.isBuilt = !0, i.isFunction(h.built) && r.one("built.viewer", h.built), this.trigger("built.viewer"))
        },
        unbuild: function() {
            this.isBuilt && (this.isBuilt = !1, this.$viewer.remove())
        },
        bind: function() {
            var e = this.options,
                t = this.$element;
            i.isFunction(e.view) && t.on("view.viewer", e.view), i.isFunction(e.viewed) && t.on("viewed.viewer", e.viewed), this.$viewer.on("click.viewer", i.proxy(this.click, this)).on("wheel mousewheel DOMMouseScroll", i.proxy(this.wheel, this)), this.$canvas.on(y, i.proxy(this.mousedown, this)), w.on("mousemove touchmove pointermove MSPointerMove", this._mousemove = o(this.mousemove, this)).on(x, this._mouseup = o(this.mouseup, this)).on("keydown.viewer", this._keydown = o(this.keydown, this)), v.on("resize.viewer", this._resize = o(this.resize, this))
        },
        unbind: function() {
            var e = this.options,
                t = this.$element;
            i.isFunction(e.view) && t.off("view.viewer", e.view), i.isFunction(e.viewed) && t.off("viewed.viewer", e.viewed), this.$viewer.off("click.viewer", this.click).off("wheel mousewheel DOMMouseScroll", this.wheel), this.$canvas.off(y, this.mousedown), w.off("mousemove touchmove pointermove MSPointerMove", this._mousemove).off(x, this._mouseup).off("keydown.viewer", this._keydown), v.off("resize.viewer", this._resize)
        },
        render: function() {
            this.initContainer(), this.initViewer(), this.initList(), this.renderViewer()
        },
        initContainer: function() {
            this.container = {
                width: v.innerWidth(),
                height: v.innerHeight()
            }
        },
        initViewer: function() {
            var e, t = this.options,
                s = this.$parent;
            t.inline && (this.parent = e = {
                width: Y(s.width(), t.minWidth),
                height: Y(s.height(), t.minHeight)
            }), !this.isFulled && e || (e = this.container), this.viewer = i.extend({}, e)
        },
        renderViewer: function() {
            this.options.inline && !this.isFulled && this.$viewer.css(this.viewer)
        },
        initList: function() {
            var t = this.options,
                s = this.$element,
                n = this.$list,
                o = [];
            this.$images.each(function(s) {
                var n = this.src,
                    a = this.alt || r(n),
                    h = t.url;
                n && (e(h) ? h = this.getAttribute(h) : i.isFunction(h) && (h = h.call(this, this)), o.push('<li><img src="' + n + '" data-action="view" data-index="' + s + '" data-original-url="' + (h || n) + '" alt="' + a + '"></li>'))
            }), n.html(o.join("")).find("img").one("load.viewer", {
                filled: !0
            }, i.proxy(this.loadImage, this)), this.$items = n.children(), t.transition && s.one("viewed.viewer", function() {
                n.addClass(b)
            })
        },
        renderList: function(i) {
            var e = i || this.index,
                t = this.$items.eq(e).width(),
                s = t + 1;
            this.$list.css({
                width: s * this.length,
                marginLeft: (this.viewer.width - t) / 2 - s * e
            })
        },
        resetList: function() {
            this.$list.empty().removeClass(b).css("margin-left", 0)
        },
        initImage: function(e) {
            var t = this.options,
                s = this.$image,
                n = this.viewer,
                o = this.$footer.height(),
                a = n.width,
                h = Y(n.height - o, o),
                r = this.image || {};
            l(s[0], i.proxy(function(s, n) {
                var o, l, d = s / n,
                    c = a,
                    u = h;
                h * d > a ? u = a / d : c = h * d, l = {
                    naturalWidth: s,
                    naturalHeight: n,
                    aspectRatio: d,
                    ratio: (c = k(c, s)) / s,
                    width: c,
                    height: u = k(u, n),
                    left: (a - c) / 2,
                    top: (h - u) / 2
                }, o = i.extend({}, l), t.rotatable && (l.rotate = r.rotate || 0, o.rotate = 0), t.scalable && (l.scaleX = r.scaleX || 1, l.scaleY = r.scaleY || 1, o.scaleX = 1, o.scaleY = 1), this.image = l, this.initialImage = o, i.isFunction(e) && e()
            }, this))
        },
        renderImage: function(e) {
            var t = this.image,
                s = this.$image;
            s.css({
                width: t.width,
                height: t.height,
                marginLeft: t.left,
                marginTop: t.top,
                transform: a(t)
            }), i.isFunction(e) && (this.transitioning ? s.one("transitionend", e) : e())
        },
        resetImage: function() {
            this.$image && (this.$image.remove(), this.$image = null)
        },
        start: function(e) {
            var t = e.target;
            i(t).is("img") && (this.target = t, this.show())
        },
        click: function(e) {
            var t = i(e.target),
                s = t.data("action"),
                n = this.image;
            switch (s) {
                case "mix":
                    this.isPlayed ? this.stop() : this.options.inline ? (this.$viewer.hide(), i("#captrue,.video").show()) : this.hide();
                    break;
                case "view":
                    this.view(t.data("index"));
                    break;
                case "zoom-in":
                    this.zoom(.1, !0);
                    break;
                case "zoom-out":
                    this.zoom(-.1, !0);
                    break;
                case "one-to-one":
                    this.toggle();
                    break;
                case "width":
                    this.zoomTo(1, !0);
                    break;
                case "reset":
                    this.reset();
                    break;
                case "prev":
                    this.prev();
                    break;
                case "play":
                    this.play();
                    break;
                case "next":
                    this.next();
                    break;
                case "rotate-left":
                    this.rotate(-90);
                    break;
                case "rotate-right":
                    this.rotate(90);
                    break;
                case "flip-horizontal":
                    this.scaleX(-n.scaleX || -1);
                    break;
                case "flip-vertical":
                    this.scaleY(-n.scaleY || -1);
                    break;
                default:
                    this.isPlayed && this.stop()
            }
        },
        load: function() {
            var e = this.options,
                t = this.viewer,
                s = this.$image;
            this.timeout && (clearTimeout(this.timeout), this.timeout = !1), s.removeClass("viewer-invisible").css("cssText", "width:0;height:0;margin-left:" + t.width / 2 + "px;margin-top:" + t.height / 2 + "px;max-width:none!important;visibility:visible;"), this.initImage(i.proxy(function() {
                s.toggleClass(b, e.transition).toggleClass("viewer-move", e.movable), this.renderImage(i.proxy(function() {
                    this.isViewed = !0, this.trigger("viewed.viewer")
                }, this))
            }, this))
        },
        loadImage: function(e) {
            var t = e.target,
                s = i(t),
                n = s.parent(),
                o = n.width(),
                a = n.height(),
                h = e.data && e.data.filled;
            l(t, function(i, e) {
                var t = i / e,
                    n = o,
                    r = a;
                a * t > o ? h ? n = a * t : r = o / t : h ? r = o / t : n = a * t, s.css({
                    width: n,
                    height: r,
                    marginLeft: (o - n) / 2,
                    marginTop: (a - r) / 2
                })
            })
        },
        resize: function() {
            this.initContainer(), this.initViewer(), this.renderViewer(), this.renderList(), this.isViewed && this.initImage(i.proxy(function() {
                this.renderImage()
            }, this)), this.isPlayed && this.$player.find("img").one("load.viewer", i.proxy(this.loadImage, this)).trigger("load.viewer")
        },
        wheel: function(e) {
            var t = e.originalEvent || e,
                s = I(this.options.zoomRatio) || .1,
                n = 1;
            this.isViewed && (e.preventDefault(), this.wheeling || (this.wheeling = !0, setTimeout(i.proxy(function() {
                this.wheeling = !1
            }, this), 50), t.deltaY ? n = t.deltaY > 0 ? 1 : -1 : t.wheelDelta ? n = -t.wheelDelta / 120 : t.detail && (n = t.detail > 0 ? 1 : -1), this.zoom(-n * s, !0, e)))
        },
        keydown: function(i) {
            var e = this.options,
                t = i.which;
            if (this.isFulled && e.keyboard) switch (t) {
                case 27:
                    this.isPlayed ? this.stop() : e.inline ? this.isFulled && this.exit() : this.hide();
                    break;
                case 32:
                    this.isPlayed && this.stop();
                    break;
                case 37:
                    this.prev();
                    break;
                case 38:
                    i.preventDefault(), this.zoom(e.zoomRatio, !0);
                    break;
                case 39:
                    this.next();
                    break;
                case 40:
                    i.preventDefault(), this.zoom(-e.zoomRatio, !0);
                    break;
                case 48:
                case 49:
                    (i.ctrlKey || i.shiftKey) && (i.preventDefault(), this.toggle())
            }
        },
        mousedown: function(i) {
            var e, t = this.options,
                s = i.originalEvent,
                n = s && s.touches,
                o = i,
                a = !!t.movable && "move";
            if (this.isViewed) {
                if (n) {
                    if ((e = n.length) > 1) {
                        if (!t.zoomable || 2 !== e) return;
                        o = n[1], this.startX2 = o.pageX, this.startY2 = o.pageY, a = "zoom"
                    } else this.isSwitchable() && (a = "switch");
                    o = n[0]
                }
                a && (i.preventDefault(), this.action = a, this.startX = o.pageX || s && s.pageX, this.startY = o.pageY || s && s.pageY)
            }
        },
        mousemove: function(i) {
            var e, t = this.options,
                s = this.action,
                n = this.$image,
                o = i.originalEvent,
                a = o && o.touches,
                h = i;
            if (this.isViewed) {
                if (a) {
                    if ((e = a.length) > 1) {
                        if (!t.zoomable || 2 !== e) return;
                        h = a[1], this.endX2 = h.pageX, this.endY2 = h.pageY
                    }
                    h = a[0]
                }
                s && (i.preventDefault(), "move" === s && t.transition && n.hasClass(b) && n.removeClass(b), this.endX = h.pageX || o && o.pageX, this.endY = h.pageY || o && o.pageY, this.change(i))
            }
        },
        mouseup: function(i) {
            var e = this.action;
            e && (i.preventDefault(), "move" === e && this.options.transition && this.$image.addClass(b), this.action = !1)
        },
        show: function() {
            var e, t = this.options;
            t.inline || this.transitioning || (this.isBuilt || this.build(), i.isFunction(t.show) && this.$element.one("show.viewer", t.show), this.trigger("show.viewer").isDefaultPrevented() || (this.$body.addClass("viewer-open"), e = this.$viewer.removeClass("viewer-hide"), this.$element.one("shown.viewer", i.proxy(function() {
                this.view(this.target ? this.$images.index(this.target) : this.index), this.target = !1
            }, this)), t.transition ? (this.transitioning = !0, e.addClass(b), h(e[0]), e.one("transitionend", i.proxy(this.shown, this)).addClass(p)) : (e.addClass(p), this.shown())))
        },
        hide: function() {
            var e = this.options,
                t = this.$viewer;
            e.inline || this.transitioning || !this.isShown || (i.isFunction(e.hide) && this.$element.one("hide.viewer", e.hide), this.trigger("hide.viewer").isDefaultPrevented() || (this.isViewed && e.transition ? (this.transitioning = !0, this.$image.one("transitionend", i.proxy(function() {
                t.one("transitionend", i.proxy(this.hidden, this)).removeClass(p)
            }, this)), this.zoomTo(0, !1, !1, !0)) : (t.removeClass(p), this.hidden())))
        },
        view: function(e) {
            var t, s, n, o, a, h = this.$title;
            e = Number(e) || 0, !this.isShown || this.isPlayed || e < 0 || e >= this.length || this.isViewed && e === this.index || this.trigger("view.viewer").isDefaultPrevented() || (o = (n = (s = this.$items.eq(e)).find("img")).data("originalUrl"), a = n.attr("alt"), this.$image = t = i('<img src="' + o + '" alt="' + a + '">'), this.isViewed && this.$items.eq(this.index).removeClass("viewer-active"), s.addClass("viewer-active"), this.isViewed = !1, this.index = e, this.image = null, this.$canvas.html(t.addClass("viewer-invisible")), this.renderList(), h.empty(), this.$element.one("viewed.viewer", i.proxy(function() {
                var i = this.image,
                    e = i.naturalWidth,
                    t = i.naturalHeight;
                h.html(a + " (" + e + " &times; " + t + ")")
            }, this)), t[0].complete ? this.load() : (t.one("load.viewer", i.proxy(this.load, this)), this.timeout && clearTimeout(this.timeout), this.timeout = setTimeout(i.proxy(function() {
                t.removeClass("viewer-invisible"), this.timeout = !1
            }, this), 1e3)))
        },
        prev: function() {
            this.view(Y(this.index - 1, 0))
        },
        next: function() {
            this.view(k(this.index + 1, this.length - 1))
        },
        move: function(i, e) {
            var t = this.image;
            this.moveTo(s(i) ? i : t.left + I(i), s(e) ? e : t.top + I(e))
        },
        moveTo: function(i, e) {
            var n = this.image,
                o = !1;
            s(e) && (e = i), i = I(i), e = I(e), this.isViewed && !this.isPlayed && this.options.movable && (t(i) && (n.left = i, o = !0), t(e) && (n.top = e, o = !0), o && this.renderImage())
        },
        zoom: function(i, e, t) {
            var s = this.image;
            i = (i = I(i)) < 0 ? 1 / (1 - i) : 1 + i, this.zoomTo(s.width * i / s.naturalWidth, e, t)
        },
        zoomTo: function(i, e, s, n) {
            var o, a, h, r, l, c = this.options,
                u = .01,
                v = 100,
                w = this.image,
                m = w.width,
                f = w.height;
            t(i = Y(0, i)) && this.isViewed && !this.isPlayed && (n || c.zoomable) && (n || (u = Y(u, c.minZoomRatio), v = k(v, c.maxZoomRatio), i = k(Y(i, u), v)), i > .95 && i < 1.05 && (i = 1), a = w.naturalWidth * i, h = w.naturalHeight * i, s && (o = s.originalEvent) ? (r = this.$viewer.offset(), l = o.touches ? d(o.touches) : {
                pageX: s.pageX || o.pageX || 0,
                pageY: s.pageY || o.pageY || 0
            }, w.left -= (a - m) * ((l.pageX - r.left - w.left) / m), w.top -= (h - f) * ((l.pageY - r.top - w.top) / f)) : (w.left -= (a - m) / 2, w.top -= (h - f) / 2), w.width = a, w.height = h, w.ratio = i, this.renderImage(), e && this.tooltip())
        },
        rotate: function(i) {
            this.rotateTo((this.image.rotate || 0) + I(i))
        },
        rotateTo: function(i) {
            var e = this.image;
            t(i = I(i)) && this.isViewed && !this.isPlayed && this.options.rotatable && (e.rotate = i, this.renderImage())
        },
        scale: function(i, e) {
            var n = this.image,
                o = !1;
            s(e) && (e = i), i = I(i), e = I(e), this.isViewed && !this.isPlayed && this.options.scalable && (t(i) && (n.scaleX = i, o = !0), t(e) && (n.scaleY = e, o = !0), o && this.renderImage())
        },
        scaleX: function(i) {
            this.scale(i, this.image.scaleY)
        },
        scaleY: function(i) {
            this.scale(this.image.scaleX, i)
        },
        play: function() {
            var e, s = this.options,
                n = this.$player,
                o = i.proxy(this.loadImage, this),
                a = [],
                h = 0,
                r = 0;
            this.isShown && !this.isPlayed && (s.fullscreen && this.requestFullscreen(), this.isPlayed = !0, n.addClass("viewer-show"), this.$items.each(function(e) {
                var t = i(this),
                    l = t.find("img"),
                    d = i('<img src="' + l.data("originalUrl") + '" alt="' + l.attr("alt") + '">');
                h++, d.addClass("viewer-fade").toggleClass(b, s.transition), t.hasClass("viewer-active") && (d.addClass(p), r = e), a.push(d), d.one("load.viewer", {
                    filled: !1
                }, o), n.append(d)
            }), t(s.interval) && s.interval > 0 && (e = i.proxy(function() {
                this.playing = setTimeout(function() {
                    a[r].removeClass(p), a[r = ++r < h ? r : 0].addClass(p), e()
                }, s.interval)
            }, this), h > 1 && e()))
        },
        stop: function() {
            this.isPlayed && (this.options.fullscreen && this.exitFullscreen(), this.isPlayed = !1, clearTimeout(this.playing), this.$player.removeClass("viewer-show").empty())
        },
        full: function() {
            var e = this.options,
                t = this.$image,
                s = this.$list;
            this.isShown && !this.isPlayed && !this.isFulled && e.inline && (this.isFulled = !0, this.$body.addClass("viewer-open"), this.$button.addClass("viewer-fullscreen-exit"), e.transition && (t.removeClass(b), s.removeClass(b)), this.$viewer.addClass("viewer-fixed").removeAttr("style").css("z-index", e.zIndex), this.initContainer(), this.viewer = i.extend({}, this.container), this.renderList(), this.initImage(i.proxy(function() {
                this.renderImage(function() {
                    e.transition && setTimeout(function() {
                        t.addClass(b), s.addClass(b)
                    }, 0)
                })
            }, this)))
        },
        exit: function() {
            var e = this.options,
                t = this.$image,
                s = this.$list;
            this.isFulled && (this.isFulled = !1, this.$body.removeClass("viewer-open"), this.$button.removeClass("viewer-fullscreen-exit"), e.transition && (t.removeClass(b), s.removeClass(b)), this.$viewer.removeClass("viewer-fixed").css("z-index", e.zIndexInline), this.viewer = i.extend({}, this.parent), this.renderViewer(), this.renderList(), this.initImage(i.proxy(function() {
                this.renderImage(function() {
                    e.transition && setTimeout(function() {
                        t.addClass(b), s.addClass(b)
                    }, 0)
                })
            }, this)))
        },
        tooltip: function() {
            var e = this.options,
                t = this.$tooltip,
                s = this.image,
                n = ["viewer-show", "viewer-fade", b].join(" ");
            this.isViewed && !this.isPlayed && e.tooltip && (t.text(C(100 * s.ratio) + "%"), this.tooltiping ? clearTimeout(this.tooltiping) : e.transition ? (this.fading && t.trigger("transitionend"), t.addClass(n), h(t[0]), t.addClass(p)) : t.addClass("viewer-show"), this.tooltiping = setTimeout(i.proxy(function() {
                e.transition ? (t.one("transitionend", i.proxy(function() {
                    t.removeClass(n), this.fading = !1
                }, this)).removeClass(p), this.fading = !0) : t.removeClass("viewer-show"), this.tooltiping = !1
            }, this), 1e3))
        },
        toggle: function() {
            1 === this.image.ratio ? this.zoomTo(this.initialImage.ratio, !0) : this.zoomTo(1, !0)
        },
        reset: function() {
            this.isViewed && !this.isPlayed && (this.image = i.extend({}, this.initialImage), this.renderImage())
        },
        update: function() {
            var e, t = this.$element,
                s = this.$images,
                n = [];
            if (this.isImg) {
                if (!t.parent().length) return this.destroy()
            } else this.$images = s = t.find("img"), this.length = s.length;
            this.isBuilt && (i.each(this.$items, function(e) {
                var t = i(this).find("img")[0],
                    o = s[e];
                o ? o.src !== t.src && n.push(e) : n.push(e)
            }), this.$list.width("auto"), this.initList(), this.isShown && (this.length ? this.isViewed && ((e = i.inArray(this.index, n)) >= 0 ? (this.isViewed = !1, this.view(Y(this.index - (e + 1), 0))) : this.$items.eq(this.index).addClass("viewer-active")) : (this.$image = null, this.isViewed = !1, this.index = 0, this.image = null, this.$canvas.empty(), this.$title.empty())))
        },
        destroy: function() {
            var i = this.$element;
            this.options.inline ? this.unbind() : (this.isShown && this.unbind(), i.off("click.viewer", this.start)), this.unbuild(), i.removeData("viewer")
        },
        trigger: function(e, t) {
            var s = i.Event(e, t);
            return this.$element.trigger(s), s
        },
        shown: function() {
            var e = this.options;
            this.transitioning = !1, this.isFulled = !0, this.isShown = !0, this.isVisible = !0, this.render(), this.bind(), i.isFunction(e.shown) && this.$element.one("shown.viewer", e.shown), this.trigger("shown.viewer")
        },
        hidden: function() {
            var e = this.options;
            this.transitioning = !1, this.isViewed = !1, this.isFulled = !1, this.isShown = !1, this.isVisible = !1, this.unbind(), this.$body.removeClass("viewer-open"), this.$viewer.addClass("viewer-hide"), this.resetList(), this.resetImage(), i.isFunction(e.hidden) && this.$element.one("hidden.viewer", e.hidden), this.trigger("hidden.viewer")
        },
        requestFullscreen: function() {
            var i = document.documentElement;
            !this.isFulled || document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement || (i.requestFullscreen ? i.requestFullscreen() : i.msRequestFullscreen ? i.msRequestFullscreen() : i.mozRequestFullScreen ? i.mozRequestFullScreen() : i.webkitRequestFullscreen && i.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT))
        },
        exitFullscreen: function() {
            this.isFulled && (document.exitFullscreen ? document.exitFullscreen() : document.msExitFullscreen ? document.msExitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen && document.webkitExitFullscreen())
        },
        change: function(i) {
            var e = this.endX - this.startX,
                t = this.endY - this.startY;
            switch (this.action) {
                case "move":
                    this.move(e, t);
                    break;
                case "zoom":
                    this.zoom(function(i, e, t, s) {
                        var n = z(i * i + e * e);
                        return (z(t * t + s * s) - n) / n
                    }(F(this.startX - this.startX2), F(this.startY - this.startY2), F(this.endX - this.endX2), F(this.endY - this.endY2)), !1, i), this.startX2 = this.endX2, this.startY2 = this.endY2;
                    break;
                case "switch":
                    this.action = "switched", F(e) > F(t) && (e > 1 ? this.prev() : e < -1 && this.next())
            }
            this.startX = this.endX, this.startY = this.endY
        },
        isSwitchable: function() {
            var i = this.image,
                e = this.viewer;
            return i.left >= 0 && i.top >= 0 && i.width <= e.width && i.height <= e.height
        }
    }, u.DEFAULTS = {
        inline: !1,
        button: !0,
        navbar: !0,
        title: !0,
        toolbar: !0,
        tooltip: !0,
        movable: !0,
        zoomable: !0,
        rotatable: !0,
        scalable: !0,
        transition: !0,
        fullscreen: !0,
        keyboard: !0,
        interval: 5e3,
        minWidth: 200,
        minHeight: 100,
        zoomRatio: .1,
        minZoomRatio: .01,
        maxZoomRatio: 100,
        zIndex: 2015,
        zIndexInline: 0,
        url: "src",
        build: null,
        built: null,
        show: null,
        shown: null,
        hide: null,
        hidden: null,
        view: null,
        viewed: null
    }, u.setDefaults = function(e) {
        i.extend(u.DEFAULTS, e)
    }, u.TEMPLATE = '<div class="viewer-container"><div class="viewer-canvas"></div><div class="viewer-footer"><div class="viewer-title"></div><ul class="viewer-toolbar"><li class="viewer-zoom-in" data-action="zoom-in"></li><li class="viewer-zoom-out" data-action="zoom-out"></li><li class="viewer-one-to-one" data-action="one-to-one"></li><li class="viewer-reset" data-action="reset"></li><li class="viewer-prev" data-action="prev"></li><li class="viewer-width" data-action="width"></li><li class="viewer-next" data-action="next"></li><li class="viewer-rotate-left" data-action="rotate-left"></li><li class="viewer-rotate-right" data-action="rotate-right"></li><li class="viewer-flip-horizontal" data-action="flip-horizontal"></li><li class="viewer-flip-vertical" data-action="flip-vertical"></li></ul><div class="viewer-navbar"><ul class="viewer-list"></ul></div></div><div class="viewer-tooltip"></div><div class="viewer-button" data-action="mix"></div><div class="viewer-player"></div></div>', u.other = i.fn.viewer, i.fn.viewer = function(t) {
        var o, a = n(arguments, 1);
        return this.each(function() {
            var s, n = i(this),
                h = n.data("viewer");
            if (!h) {
                if (/destroy|hide|exit|stop|reset/.test(t)) return;
                n.data("viewer", h = new u(this, t))
            }
            e(t) && i.isFunction(s = h[t]) && (o = s.apply(h, a))
        }), s(o) ? this : o
    }, i.fn.viewer.Constructor = u, i.fn.viewer.setDefaults = u.setDefaults, i.fn.viewer.noConflict = function() {
        return i.fn.viewer = u.other, this
    }
});